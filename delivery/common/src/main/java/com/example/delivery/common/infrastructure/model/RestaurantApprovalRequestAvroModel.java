/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.example.delivery.common.infrastructure.model;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class RestaurantApprovalRequestAvroModel extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 3715211043270717536L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"RestaurantApprovalRequestAvroModel\",\"namespace\":\"com.example.delivery.common.infrastructure.model\",\"fields\":[{\"name\":\"orderId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"userId\",\"type\":\"long\"},{\"name\":\"restaurantId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"deliveryAddress\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"totalPrice\",\"type\":{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":10,\"scale\":2}},{\"name\":\"productIds\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"logicalType\":\"uuid\"}}},{\"name\":\"trackingId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"orderStatus\",\"type\":{\"type\":\"enum\",\"name\":\"RestaurantOrderStatus\",\"symbols\":[\"PENDING\",\"PAID\",\"APPROVED\",\"CANCELLED\"]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.UUIDConversion());
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.DecimalConversion());
  }

  private static final BinaryMessageEncoder<RestaurantApprovalRequestAvroModel> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<RestaurantApprovalRequestAvroModel> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<RestaurantApprovalRequestAvroModel> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<RestaurantApprovalRequestAvroModel> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<RestaurantApprovalRequestAvroModel> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this RestaurantApprovalRequestAvroModel to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a RestaurantApprovalRequestAvroModel from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a RestaurantApprovalRequestAvroModel instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static RestaurantApprovalRequestAvroModel fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.util.UUID orderId;
  private long userId;
  private java.util.UUID restaurantId;
  private java.lang.String deliveryAddress;
  private java.math.BigDecimal totalPrice;
  private java.util.List<java.util.UUID> productIds;
  private java.util.UUID trackingId;
  private com.example.delivery.common.infrastructure.model.RestaurantOrderStatus orderStatus;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public RestaurantApprovalRequestAvroModel() {}

  /**
   * All-args constructor.
   * @param orderId The new value for orderId
   * @param userId The new value for userId
   * @param restaurantId The new value for restaurantId
   * @param deliveryAddress The new value for deliveryAddress
   * @param totalPrice The new value for totalPrice
   * @param productIds The new value for productIds
   * @param trackingId The new value for trackingId
   * @param orderStatus The new value for orderStatus
   */
  public RestaurantApprovalRequestAvroModel(java.util.UUID orderId, java.lang.Long userId, java.util.UUID restaurantId, java.lang.String deliveryAddress, java.math.BigDecimal totalPrice, java.util.List<java.util.UUID> productIds, java.util.UUID trackingId, com.example.delivery.common.infrastructure.model.RestaurantOrderStatus orderStatus) {
    this.orderId = orderId;
    this.userId = userId;
    this.restaurantId = restaurantId;
    this.deliveryAddress = deliveryAddress;
    this.totalPrice = totalPrice;
    this.productIds = productIds;
    this.trackingId = trackingId;
    this.orderStatus = orderStatus;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return orderId;
    case 1: return userId;
    case 2: return restaurantId;
    case 3: return deliveryAddress;
    case 4: return totalPrice;
    case 5: return productIds;
    case 6: return trackingId;
    case 7: return orderStatus;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      new org.apache.avro.Conversions.UUIDConversion(),
      null,
      new org.apache.avro.Conversions.UUIDConversion(),
      null,
      new org.apache.avro.Conversions.DecimalConversion(),
      null,
      new org.apache.avro.Conversions.UUIDConversion(),
      null,
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: orderId = (java.util.UUID)value$; break;
    case 1: userId = (java.lang.Long)value$; break;
    case 2: restaurantId = (java.util.UUID)value$; break;
    case 3: deliveryAddress = value$ != null ? value$.toString() : null; break;
    case 4: totalPrice = (java.math.BigDecimal)value$; break;
    case 5: productIds = (java.util.List<java.util.UUID>)value$; break;
    case 6: trackingId = (java.util.UUID)value$; break;
    case 7: orderStatus = (com.example.delivery.common.infrastructure.model.RestaurantOrderStatus)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'orderId' field.
   * @return The value of the 'orderId' field.
   */
  public java.util.UUID getOrderId() {
    return orderId;
  }


  /**
   * Sets the value of the 'orderId' field.
   * @param value the value to set.
   */
  public void setOrderId(java.util.UUID value) {
    this.orderId = value;
  }

  /**
   * Gets the value of the 'userId' field.
   * @return The value of the 'userId' field.
   */
  public long getUserId() {
    return userId;
  }


  /**
   * Sets the value of the 'userId' field.
   * @param value the value to set.
   */
  public void setUserId(long value) {
    this.userId = value;
  }

  /**
   * Gets the value of the 'restaurantId' field.
   * @return The value of the 'restaurantId' field.
   */
  public java.util.UUID getRestaurantId() {
    return restaurantId;
  }


  /**
   * Sets the value of the 'restaurantId' field.
   * @param value the value to set.
   */
  public void setRestaurantId(java.util.UUID value) {
    this.restaurantId = value;
  }

  /**
   * Gets the value of the 'deliveryAddress' field.
   * @return The value of the 'deliveryAddress' field.
   */
  public java.lang.String getDeliveryAddress() {
    return deliveryAddress;
  }


  /**
   * Sets the value of the 'deliveryAddress' field.
   * @param value the value to set.
   */
  public void setDeliveryAddress(java.lang.String value) {
    this.deliveryAddress = value;
  }

  /**
   * Gets the value of the 'totalPrice' field.
   * @return The value of the 'totalPrice' field.
   */
  public java.math.BigDecimal getTotalPrice() {
    return totalPrice;
  }


  /**
   * Sets the value of the 'totalPrice' field.
   * @param value the value to set.
   */
  public void setTotalPrice(java.math.BigDecimal value) {
    this.totalPrice = value;
  }

  /**
   * Gets the value of the 'productIds' field.
   * @return The value of the 'productIds' field.
   */
  public java.util.List<java.util.UUID> getProductIds() {
    return productIds;
  }


  /**
   * Sets the value of the 'productIds' field.
   * @param value the value to set.
   */
  public void setProductIds(java.util.List<java.util.UUID> value) {
    this.productIds = value;
  }

  /**
   * Gets the value of the 'trackingId' field.
   * @return The value of the 'trackingId' field.
   */
  public java.util.UUID getTrackingId() {
    return trackingId;
  }


  /**
   * Sets the value of the 'trackingId' field.
   * @param value the value to set.
   */
  public void setTrackingId(java.util.UUID value) {
    this.trackingId = value;
  }

  /**
   * Gets the value of the 'orderStatus' field.
   * @return The value of the 'orderStatus' field.
   */
  public com.example.delivery.common.infrastructure.model.RestaurantOrderStatus getOrderStatus() {
    return orderStatus;
  }


  /**
   * Sets the value of the 'orderStatus' field.
   * @param value the value to set.
   */
  public void setOrderStatus(com.example.delivery.common.infrastructure.model.RestaurantOrderStatus value) {
    this.orderStatus = value;
  }

  /**
   * Creates a new RestaurantApprovalRequestAvroModel RecordBuilder.
   * @return A new RestaurantApprovalRequestAvroModel RecordBuilder
   */
  public static com.example.delivery.common.infrastructure.model.RestaurantApprovalRequestAvroModel.Builder newBuilder() {
    return new com.example.delivery.common.infrastructure.model.RestaurantApprovalRequestAvroModel.Builder();
  }

  /**
   * Creates a new RestaurantApprovalRequestAvroModel RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new RestaurantApprovalRequestAvroModel RecordBuilder
   */
  public static com.example.delivery.common.infrastructure.model.RestaurantApprovalRequestAvroModel.Builder newBuilder(com.example.delivery.common.infrastructure.model.RestaurantApprovalRequestAvroModel.Builder other) {
    if (other == null) {
      return new com.example.delivery.common.infrastructure.model.RestaurantApprovalRequestAvroModel.Builder();
    } else {
      return new com.example.delivery.common.infrastructure.model.RestaurantApprovalRequestAvroModel.Builder(other);
    }
  }

  /**
   * Creates a new RestaurantApprovalRequestAvroModel RecordBuilder by copying an existing RestaurantApprovalRequestAvroModel instance.
   * @param other The existing instance to copy.
   * @return A new RestaurantApprovalRequestAvroModel RecordBuilder
   */
  public static com.example.delivery.common.infrastructure.model.RestaurantApprovalRequestAvroModel.Builder newBuilder(com.example.delivery.common.infrastructure.model.RestaurantApprovalRequestAvroModel other) {
    if (other == null) {
      return new com.example.delivery.common.infrastructure.model.RestaurantApprovalRequestAvroModel.Builder();
    } else {
      return new com.example.delivery.common.infrastructure.model.RestaurantApprovalRequestAvroModel.Builder(other);
    }
  }

  /**
   * RecordBuilder for RestaurantApprovalRequestAvroModel instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<RestaurantApprovalRequestAvroModel>
    implements org.apache.avro.data.RecordBuilder<RestaurantApprovalRequestAvroModel> {

    private java.util.UUID orderId;
    private long userId;
    private java.util.UUID restaurantId;
    private java.lang.String deliveryAddress;
    private java.math.BigDecimal totalPrice;
    private java.util.List<java.util.UUID> productIds;
    private java.util.UUID trackingId;
    private com.example.delivery.common.infrastructure.model.RestaurantOrderStatus orderStatus;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.example.delivery.common.infrastructure.model.RestaurantApprovalRequestAvroModel.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.orderId)) {
        this.orderId = data().deepCopy(fields()[0].schema(), other.orderId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.userId)) {
        this.userId = data().deepCopy(fields()[1].schema(), other.userId);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.restaurantId)) {
        this.restaurantId = data().deepCopy(fields()[2].schema(), other.restaurantId);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.deliveryAddress)) {
        this.deliveryAddress = data().deepCopy(fields()[3].schema(), other.deliveryAddress);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.totalPrice)) {
        this.totalPrice = data().deepCopy(fields()[4].schema(), other.totalPrice);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.productIds)) {
        this.productIds = data().deepCopy(fields()[5].schema(), other.productIds);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.trackingId)) {
        this.trackingId = data().deepCopy(fields()[6].schema(), other.trackingId);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.orderStatus)) {
        this.orderStatus = data().deepCopy(fields()[7].schema(), other.orderStatus);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
    }

    /**
     * Creates a Builder by copying an existing RestaurantApprovalRequestAvroModel instance
     * @param other The existing instance to copy.
     */
    private Builder(com.example.delivery.common.infrastructure.model.RestaurantApprovalRequestAvroModel other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.orderId)) {
        this.orderId = data().deepCopy(fields()[0].schema(), other.orderId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.userId)) {
        this.userId = data().deepCopy(fields()[1].schema(), other.userId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.restaurantId)) {
        this.restaurantId = data().deepCopy(fields()[2].schema(), other.restaurantId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.deliveryAddress)) {
        this.deliveryAddress = data().deepCopy(fields()[3].schema(), other.deliveryAddress);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.totalPrice)) {
        this.totalPrice = data().deepCopy(fields()[4].schema(), other.totalPrice);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.productIds)) {
        this.productIds = data().deepCopy(fields()[5].schema(), other.productIds);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.trackingId)) {
        this.trackingId = data().deepCopy(fields()[6].schema(), other.trackingId);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.orderStatus)) {
        this.orderStatus = data().deepCopy(fields()[7].schema(), other.orderStatus);
        fieldSetFlags()[7] = true;
      }
    }

    /**
      * Gets the value of the 'orderId' field.
      * @return The value.
      */
    public java.util.UUID getOrderId() {
      return orderId;
    }


    /**
      * Sets the value of the 'orderId' field.
      * @param value The value of 'orderId'.
      * @return This builder.
      */
    public com.example.delivery.common.infrastructure.model.RestaurantApprovalRequestAvroModel.Builder setOrderId(java.util.UUID value) {
      validate(fields()[0], value);
      this.orderId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'orderId' field has been set.
      * @return True if the 'orderId' field has been set, false otherwise.
      */
    public boolean hasOrderId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'orderId' field.
      * @return This builder.
      */
    public com.example.delivery.common.infrastructure.model.RestaurantApprovalRequestAvroModel.Builder clearOrderId() {
      orderId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'userId' field.
      * @return The value.
      */
    public long getUserId() {
      return userId;
    }


    /**
      * Sets the value of the 'userId' field.
      * @param value The value of 'userId'.
      * @return This builder.
      */
    public com.example.delivery.common.infrastructure.model.RestaurantApprovalRequestAvroModel.Builder setUserId(long value) {
      validate(fields()[1], value);
      this.userId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'userId' field has been set.
      * @return True if the 'userId' field has been set, false otherwise.
      */
    public boolean hasUserId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'userId' field.
      * @return This builder.
      */
    public com.example.delivery.common.infrastructure.model.RestaurantApprovalRequestAvroModel.Builder clearUserId() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'restaurantId' field.
      * @return The value.
      */
    public java.util.UUID getRestaurantId() {
      return restaurantId;
    }


    /**
      * Sets the value of the 'restaurantId' field.
      * @param value The value of 'restaurantId'.
      * @return This builder.
      */
    public com.example.delivery.common.infrastructure.model.RestaurantApprovalRequestAvroModel.Builder setRestaurantId(java.util.UUID value) {
      validate(fields()[2], value);
      this.restaurantId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'restaurantId' field has been set.
      * @return True if the 'restaurantId' field has been set, false otherwise.
      */
    public boolean hasRestaurantId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'restaurantId' field.
      * @return This builder.
      */
    public com.example.delivery.common.infrastructure.model.RestaurantApprovalRequestAvroModel.Builder clearRestaurantId() {
      restaurantId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'deliveryAddress' field.
      * @return The value.
      */
    public java.lang.String getDeliveryAddress() {
      return deliveryAddress;
    }


    /**
      * Sets the value of the 'deliveryAddress' field.
      * @param value The value of 'deliveryAddress'.
      * @return This builder.
      */
    public com.example.delivery.common.infrastructure.model.RestaurantApprovalRequestAvroModel.Builder setDeliveryAddress(java.lang.String value) {
      validate(fields()[3], value);
      this.deliveryAddress = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'deliveryAddress' field has been set.
      * @return True if the 'deliveryAddress' field has been set, false otherwise.
      */
    public boolean hasDeliveryAddress() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'deliveryAddress' field.
      * @return This builder.
      */
    public com.example.delivery.common.infrastructure.model.RestaurantApprovalRequestAvroModel.Builder clearDeliveryAddress() {
      deliveryAddress = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalPrice' field.
      * @return The value.
      */
    public java.math.BigDecimal getTotalPrice() {
      return totalPrice;
    }


    /**
      * Sets the value of the 'totalPrice' field.
      * @param value The value of 'totalPrice'.
      * @return This builder.
      */
    public com.example.delivery.common.infrastructure.model.RestaurantApprovalRequestAvroModel.Builder setTotalPrice(java.math.BigDecimal value) {
      validate(fields()[4], value);
      this.totalPrice = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'totalPrice' field has been set.
      * @return True if the 'totalPrice' field has been set, false otherwise.
      */
    public boolean hasTotalPrice() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'totalPrice' field.
      * @return This builder.
      */
    public com.example.delivery.common.infrastructure.model.RestaurantApprovalRequestAvroModel.Builder clearTotalPrice() {
      totalPrice = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'productIds' field.
      * @return The value.
      */
    public java.util.List<java.util.UUID> getProductIds() {
      return productIds;
    }


    /**
      * Sets the value of the 'productIds' field.
      * @param value The value of 'productIds'.
      * @return This builder.
      */
    public com.example.delivery.common.infrastructure.model.RestaurantApprovalRequestAvroModel.Builder setProductIds(java.util.List<java.util.UUID> value) {
      validate(fields()[5], value);
      this.productIds = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'productIds' field has been set.
      * @return True if the 'productIds' field has been set, false otherwise.
      */
    public boolean hasProductIds() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'productIds' field.
      * @return This builder.
      */
    public com.example.delivery.common.infrastructure.model.RestaurantApprovalRequestAvroModel.Builder clearProductIds() {
      productIds = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'trackingId' field.
      * @return The value.
      */
    public java.util.UUID getTrackingId() {
      return trackingId;
    }


    /**
      * Sets the value of the 'trackingId' field.
      * @param value The value of 'trackingId'.
      * @return This builder.
      */
    public com.example.delivery.common.infrastructure.model.RestaurantApprovalRequestAvroModel.Builder setTrackingId(java.util.UUID value) {
      validate(fields()[6], value);
      this.trackingId = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'trackingId' field has been set.
      * @return True if the 'trackingId' field has been set, false otherwise.
      */
    public boolean hasTrackingId() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'trackingId' field.
      * @return This builder.
      */
    public com.example.delivery.common.infrastructure.model.RestaurantApprovalRequestAvroModel.Builder clearTrackingId() {
      trackingId = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'orderStatus' field.
      * @return The value.
      */
    public com.example.delivery.common.infrastructure.model.RestaurantOrderStatus getOrderStatus() {
      return orderStatus;
    }


    /**
      * Sets the value of the 'orderStatus' field.
      * @param value The value of 'orderStatus'.
      * @return This builder.
      */
    public com.example.delivery.common.infrastructure.model.RestaurantApprovalRequestAvroModel.Builder setOrderStatus(com.example.delivery.common.infrastructure.model.RestaurantOrderStatus value) {
      validate(fields()[7], value);
      this.orderStatus = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'orderStatus' field has been set.
      * @return True if the 'orderStatus' field has been set, false otherwise.
      */
    public boolean hasOrderStatus() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'orderStatus' field.
      * @return This builder.
      */
    public com.example.delivery.common.infrastructure.model.RestaurantApprovalRequestAvroModel.Builder clearOrderStatus() {
      orderStatus = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public RestaurantApprovalRequestAvroModel build() {
      try {
        RestaurantApprovalRequestAvroModel record = new RestaurantApprovalRequestAvroModel();
        record.orderId = fieldSetFlags()[0] ? this.orderId : (java.util.UUID) defaultValue(fields()[0]);
        record.userId = fieldSetFlags()[1] ? this.userId : (java.lang.Long) defaultValue(fields()[1]);
        record.restaurantId = fieldSetFlags()[2] ? this.restaurantId : (java.util.UUID) defaultValue(fields()[2]);
        record.deliveryAddress = fieldSetFlags()[3] ? this.deliveryAddress : (java.lang.String) defaultValue(fields()[3]);
        record.totalPrice = fieldSetFlags()[4] ? this.totalPrice : (java.math.BigDecimal) defaultValue(fields()[4]);
        record.productIds = fieldSetFlags()[5] ? this.productIds : (java.util.List<java.util.UUID>) defaultValue(fields()[5]);
        record.trackingId = fieldSetFlags()[6] ? this.trackingId : (java.util.UUID) defaultValue(fields()[6]);
        record.orderStatus = fieldSetFlags()[7] ? this.orderStatus : (com.example.delivery.common.infrastructure.model.RestaurantOrderStatus) defaultValue(fields()[7]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<RestaurantApprovalRequestAvroModel>
    WRITER$ = (org.apache.avro.io.DatumWriter<RestaurantApprovalRequestAvroModel>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<RestaurantApprovalRequestAvroModel>
    READER$ = (org.apache.avro.io.DatumReader<RestaurantApprovalRequestAvroModel>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










